<Window
    x:Class="WeMusic.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WeMusic.Model.Player"
    Width="1024"
    Height="632"
    MinHeight="632"
    MinWidth="1024"
    WindowStartupLocation="CenterScreen"
    WindowState="{Binding State}"
    ResizeMode="CanResize"
    Title="WeMusic"
    
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:attached="clr-namespace:DMSkin.Attached;assembly=DMSkin"
    xmlns:vm="clr-namespace:WeMusic.ViewModel"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:converter="clr-namespace:WeMusic.Converter"
    xmlns:control="clr-namespace:WeMusic.Control"
    >

    <!--Command Binding-->
    <Window.DataContext>
        <vm:MainWindowViewModel></vm:MainWindowViewModel>
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="8" CaptionHeight="0" CornerRadius="0" GlassFrameThickness="1"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <converter:TimeSpanConverter x:Key="TimeSpanConverter"/>
    </Window.Resources>

    <md:DialogHost Identifier="RootDialog">

        <Grid Margin="{Binding GridMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>

            <!--Background-->
            <Border Grid.RowSpan="3">
                <Image Source="{Binding Background}" Stretch="UniformToFill" VerticalAlignment="Center">
                    <Image.Effect>
                        <BlurEffect Radius="100"/>
                    </Image.Effect>
                </Image>
            </Border>

            <!--Title-->
            <Grid VerticalAlignment="Center" Background="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DragMoveCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="微音乐" Width="100" VerticalAlignment="Center" FontSize="18" TextAlignment="Center"></TextBlock>
                <!--Search Box-->
                <TextBox Grid.Column="1" x:Name="SearchBox" VerticalAlignment="Center" attached:Hint.HintText="搜索音乐" attached:Icon.Geometry="{StaticResource Search}"
                     Style="{StaticResource TextBoxIconStyle_Right}" WindowChrome.IsHitTestVisibleInChrome="True"
                         Text="{Binding SearchContent,UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding ClickSearchCommand}"/>
                    </TextBox.InputBindings>
                    <TextBox.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="SearchHistoryContent" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </TextBox.Triggers>
                </TextBox>
                <!--Search History Box-->
                <Popup Grid.Column="1" Placement="Bottom" PlacementTarget="{Binding ElementName=SearchBox}" AllowsTransparency="True" 
                       x:Name="SearchHistoryContent" StaysOpen="False">
                    <Popup.Triggers>
                        <EventTrigger RoutedEvent="MouseLeftButtonUp">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="SearchHistoryContent" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Popup.Triggers>
                    <md:Card Width="{Binding ElementName=SearchBox,Path=ActualWidth}" Margin="5" x:Name="test">
                        <ListBox Cursor="Hand" ItemsSource="{Binding SearchHistoryList}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel></StackPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel Width="{Binding ElementName=SearchBox,Path=ActualWidth}" >
                                        
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ClickSearchHistoryCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" 
                                                                       CommandParameter="{Binding SearchContent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <TextBlock Text="{Binding UntilTime}" DockPanel.Dock="Right" Margin="0,0,16,0" Foreground="{DynamicResource GrayColor2}"/>
                                        <TextBlock Text="{Binding SearchContent}" DockPanel.Dock="Left"/>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </md:Card>
                </Popup>


                <!--WindowControlButton-->
                <StackPanel Grid.Column="3" Orientation="Horizontal">
                    <!--Min-->
                    <Button Height="50" Width="50" Style="{StaticResource WindowMinButtonStyle}" Command="{Binding ClickMinimizedCommand}">
                    </Button>

                    <!--Max-->
                    <Grid>
                        <Button Height="50" Width="50" Style="{StaticResource WindowMaxButtonStyle}" Command="{Binding ClickMaximizedCommand}" Visibility="{Binding MaxButtonVisibility}">
                        </Button>
                        <Button Height="50" Width="50" Style="{StaticResource WindowReturnButtonStyle}" Command="{Binding ClickMaximizedCommand}" Visibility="{Binding ReturnButtonVisibility}">
                        </Button>
                    </Grid>
                    <!--Close-->
                    <Button Height="50" Width="50" Style="{StaticResource WindowCloseButtonStyle}" Command="{Binding ClickClosedCommand}">
                    </Button>
                </StackPanel>
            </Grid>

            <!--Main Content-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="400"/>
                </Grid.ColumnDefinitions>
                <!--Page-->
                <Frame x:Name="fr" Content="{Binding CurrentPage,Mode=TwoWay}" NavigationUIVisibility="Hidden" Grid.Column="0" Grid.ColumnSpan="2">

                </Frame>
                
                <!--Play List-->
                <md:Card Grid.Column="1" x:Name="MusicListCard" Margin="420,0,-420,0">

                    <md:Card.Triggers>
                        <EventTrigger RoutedEvent="md:Card.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:.3" Storyboard.TargetProperty="Margin" From="0" To="420,0,-420,0" DecelerationRatio="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </md:Card.Triggers>
                    
                    <Grid Background="{DynamicResource MaterialDesignBackground}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--Title-->
                        <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center" Margin="20,0,0,0">
                            <TextBlock Text="播放队列" FontSize="20"/>
                            <TextBlock Text="正在播放" Margin="10,0,0,0" Foreground="{DynamicResource GrayColor1}" VerticalAlignment="Bottom"/>
                        </StackPanel>
                        
                        <!--List Control-->
                        <DockPanel Grid.Row="1" VerticalAlignment="Center" Margin="20,0,20,0">

                            <Button DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}" Margin="5,0,0,0">
                                <md:PackIcon Kind="Bin"/>
                            </Button>
                            <Button DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}" Margin="0,0,5,0">
                                <StackPanel Orientation="Horizontal">
                                    <md:PackIcon Kind="Add"/>
                                    <TextBlock Text="添加到"/>
                                </StackPanel>
                            </Button>

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="来源" Foreground="{DynamicResource GrayColor1}"/>
                                <TextBlock Text="{Binding MusicListTitle}" Margin="10,0,0,0" Foreground="{DynamicResource GrayColor1}"/>
                            </StackPanel>

                        </DockPanel>
                        
                        <!--Music List-->
                        <DataGrid Grid.Row="2" ItemsSource="{Binding ShowMusicList}"
                                  AutoGenerateColumns="False" x:Name="dgv" Background="Transparent" CanUserReorderColumns="False"
                                  CanUserAddRows="False" CanUserSortColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="歌曲名" Width="2*" Binding="{Binding Name}"></DataGridTextColumn>
                                <DataGridTextColumn Header="歌手" Width="1*" Binding="{Binding Artists}"></DataGridTextColumn>
                                <DataGridTemplateColumn Width="120" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <control:ListOperate x:Name="lstOp"></control:ListOperate>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </md:Card>
                
                
            </Grid>
            

            <!--Music Control-->
            <Grid Grid.Row="2" Margin="0,0,0,-4" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DragMoveCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <!--Music Spectrum-->
                <Polygon Points="{Binding Points}" Grid.Row="0" Grid.RowSpan="2" Width="1024" HorizontalAlignment="Center" Height="68" VerticalAlignment="Bottom">
                    <Polygon.Fill>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#84fab0"/>
                            <GradientStop Offset="1" Color="#8fd3f4"/>
                        </LinearGradientBrush>
                    </Polygon.Fill>
                </Polygon>
                
                <!--Music progress bar-->
                <control:DragSlider Grid.Row="0" Cursor="Hand" IsMoveToPointEnabled="True" Style="{StaticResource MaterialDesignSlider}"
                                  Maximum="{Binding MusicMaxTime,Converter={StaticResource TimeSpanConverter}}" 
                                  Value="{Binding  MusicNowTime,Converter={StaticResource TimeSpanConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="LostMouseCapture">
                            <i:InvokeCommandAction Command="{Binding MusicPositionChangedCommand}" CommandParameter="{Binding Value,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:DragSlider}}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="GotMouseCapture">
                            <i:InvokeCommandAction Command="{Binding MusicPositionBeginChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </control:DragSlider>

                <Grid Grid.Row="1" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--Cover and Info-->
                    <StackPanel Orientation="Horizontal" Grid.Column="0">
                        <!--Cover-->
                        <Button Margin="10,0,10,0" Height="50" Width="50" Padding="0" BorderBrush="{x:Null}" Background="{x:Null}" Command="{Binding CoverClickCommand}">
                            <Grid Cursor="Hand">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding MouseMovedCoverCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding MouseLeftCoverCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Image Source="{Binding CoverSource}" Stretch="UniformToFill">
                                    <Image.Clip>
                                        <RectangleGeometry RadiusX="5" RadiusY="5" Rect="0,0,50,50"/>
                                    </Image.Clip>
                                    <Image.Effect>
                                        <BlurEffect Radius="2"/>
                                    </Image.Effect>
                                </Image>

                                <!--Shadow & Hidden icon-->
                                <Border Background="Gray" Opacity="0.6" Visibility="{Binding HiddenCoverVisibility}">
                                    <Border.Clip>
                                        <RectangleGeometry RadiusX="5" RadiusY="5" Rect="0,0,50,50"/>
                                    </Border.Clip>
                                </Border>
                                <Image Source="{Binding HiddenCoverSource}" Height="25" Width="25" Visibility="{Binding HiddenCoverVisibility}">
                                    <Image.Clip>
                                        <RectangleGeometry RadiusX="5" RadiusY="5" Rect="0,0,50,50"/>
                                    </Image.Clip>
                                </Image>
                            </Grid>

                        </Button>


                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center">
                                <TextBlock FontSize="16" Text="{Binding MusicName}"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding MusicConnection}"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding MusicArtist}"></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center">
                                <TextBlock Text="{Binding MusicNowTime,Converter={StaticResource TimeSpanConverter}}"></TextBlock>
                                <TextBlock Text=" / "></TextBlock>
                                <TextBlock Text="{Binding MusicMaxTime,Converter={StaticResource TimeSpanConverter}}"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </StackPanel>

                    <!--Control button-->
                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding ClickPreviousMusicCommand}">
                            <md:PackIcon Kind="SkipPrevious" Foreground="White">
                                <md:PackIcon.LayoutTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                </md:PackIcon.LayoutTransform>
                            </md:PackIcon>
                        </Button>
                        <Grid>
                            <Button Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="20,0,20,0" 
                                Command="{Binding ClickPlayCommand}" Visibility="{Binding PlayButtonVisibility}">
                                <md:PackIcon Kind="Play" Foreground="White">
                                    <md:PackIcon.LayoutTransform>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    </md:PackIcon.LayoutTransform>
                                </md:PackIcon>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="20,0,20,0"
                                Command="{Binding ClickPauseCommand}" Visibility="{Binding PauseButtonVisibility}">
                                <md:PackIcon Kind="Pause" Foreground="White">
                                    <md:PackIcon.LayoutTransform>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    </md:PackIcon.LayoutTransform>
                                </md:PackIcon>
                            </Button>
                        </Grid>

                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding ClickNextMusicCommand}">
                            <md:PackIcon Kind="SkipNext" Foreground="White">
                                <md:PackIcon.LayoutTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                </md:PackIcon.LayoutTransform>
                            </md:PackIcon>
                        </Button>
                    </StackPanel>

                    <!--RightControl-->
                    <DockPanel Grid.Column="2" VerticalAlignment="Center">
                        <!--VolumeButton-->
                        <Grid DockPanel.Dock="Left">
                            <Button Style="{StaticResource MaterialDesignIconButton}" Padding="0,0,0,4" Margin="0,0,4,0" >
                                <md:PackIcon Kind="VolumeHigh"></md:PackIcon>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignIconButton}" Padding="0,0,0,4" Margin="0,0,4,0" Visibility="Hidden">
                                <md:PackIcon Kind="VolumeOff"></md:PackIcon>
                            </Button>
                        </Grid>

                        <Button Style="{StaticResource MaterialDesignIconButton}" DockPanel.Dock="Right" Margin="0,0,10,0">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="MusicListCard">
                                                <ThicknessAnimation Duration="0:0:.3" Storyboard.TargetProperty="Margin" From="400,0,-400,0" To="0" DecelerationRatio="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Button.Triggers>
                            <md:PackIcon Kind="PlaylistMusic"></md:PackIcon>
                        </Button>

                        <Button DockPanel.Dock="Right" Margin="0,0,10,0" Style="{StaticResource MaterialDesignIconButton}">
                            <md:PopupBox PlacementMode="TopAndAlignCentres" >
                                <md:PopupBox.ToggleContent>
                                    <Grid Height="45" Width="45">
                                        <Path Data="{Binding PlayModeIcon}" Fill="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </md:PopupBox.ToggleContent>
                                <md:PopupBox.PopupContent>
                                    <StackPanel>
                                        <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="0">
                                            <StackPanel Orientation="Horizontal">
                                                <Path Margin="0,0,5,0" Data="{StaticResource PlaySingle}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="单曲播放" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="1">
                                            <StackPanel Orientation="Horizontal">
                                                <Path Margin="0,0,5,0" Data="{StaticResource PlaySingleLoop}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="单曲循环" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="2">
                                            <StackPanel Orientation="Horizontal">
                                                <Path Margin="0,0,5,0" Data="{StaticResource PlayLoop}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="列表循环" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Cursor="Hand" Command="{Binding ChangePlayModeCommand}" CommandParameter="3">
                                            <StackPanel Orientation="Horizontal">
                                                <Path Margin="0,0,5,0" Data="{StaticResource PlayRandom}" Fill="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                <TextBlock Margin="5,0,0,0" Text="随机播放" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button>
                                    </StackPanel>
                                </md:PopupBox.PopupContent>

                            </md:PopupBox>
                        </Button>
                        


                        <control:DragSlider VerticalAlignment="Center" IsMoveToPointEnabled="True" Margin="0,0,20,0"
                                          Style="{StaticResource MaterialDesignSlider}"
                                          Maximum="1" Value="{Binding Volume}" Cursor="Hand">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <i:InvokeCommandAction Command="{Binding VolumeChangedCommand}" CommandParameter="{Binding Value,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=control:DragSlider}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </control:DragSlider>
                    </DockPanel>

                </Grid>
            </Grid>
        </Grid>
    </md:DialogHost>
</Window>
